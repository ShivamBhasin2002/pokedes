{"version":3,"sources":["App.js","Pokecard.js","Pokedex.js","reportWebVitals.js","index.js"],"names":["Pokecard","info","this","props","src","id","className","name","type","base_exp","Component","Pokedex","pokemons","isWinner","map","p","p1","p2","pexp1","pexp2","i","length","x","Math","floor","random","push","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAeA,I,8FCWeA,E,4JAtBX,WACI,IAAIC,EAAOC,KAAKC,MAAMF,KAClBG,EAAM,6DAQV,OAPIH,EAAKI,GAAK,GACVD,GAAO,KAAOH,EAAKI,GACdJ,EAAKI,IAAM,IAAMJ,EAAKI,GAAK,IAChCD,GAAO,IAAMH,EAAKI,GAElBD,GAAOH,EAAKI,GAChBD,GAAO,OAEH,qBAAKE,UAAU,qBAAf,SACI,8BACI,oBAAIA,UAAU,iBAAd,SAAgCL,EAAKM,OACrC,qBAAKH,IAAKA,EAAKE,UAAU,iBACzB,mBAAGA,UAAU,eAAb,SAA4B,0CAAaL,EAAKO,KAAlB,IAAwB,uBAAxB,WAAuCP,EAAKQ,uB,GAhBrEC,aCmBRC,G,kKAfX,WAAU,IAAD,EACDC,EAAWV,KAAKC,MAAMS,SAC1B,OACI,yBAAKN,UAAU,sBAAf,0BAAgDJ,KAAKC,MAAMU,SAAY,QAAU,OAAjF,0BACI,oBAAIP,UAAU,gBAAd,SAAgCJ,KAAKC,MAAMU,SAAY,UAAY,aACnE,mBAAGP,UAAU,kBAAb,SACKM,EAASE,KACN,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAUd,KAAMc,WAJjC,Q,GAJUL,cFFlBE,G,MAAW,CACX,CAAEP,GAAI,EAAGE,KAAM,aAAcC,KAAM,OAAQC,SAAU,IACrD,CAAEJ,GAAI,EAAGE,KAAM,WAAYC,KAAM,QAASC,SAAU,IACpD,CAAEJ,GAAI,GAAIE,KAAM,UAAWC,KAAM,MAAOC,SAAU,IAClD,CAAEJ,GAAI,GAAIE,KAAM,aAAcC,KAAM,SAAUC,SAAU,KACxD,CAAEJ,GAAI,GAAIE,KAAM,UAAWC,KAAM,WAAYC,SAAU,KACvD,CAAEJ,GAAI,GAAIE,KAAM,aAAcC,KAAM,SAAUC,SAAU,IACxD,CAAEJ,GAAI,GAAIE,KAAM,SAAUC,KAAM,SAAUC,SAAU,KACpD,CAAEJ,GAAI,IAAKE,KAAM,QAASC,KAAM,SAAUC,SAAU,MACrDO,EAAK,GAAIC,EAAK,GAAIC,EAAQ,EAAGC,EAAQ,EAE/BC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IAAK,CACtC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAAWb,EAASS,QAC5CL,EAAGU,KAAKd,EAASU,IACjBV,EAASe,OAAOL,EAAG,GACnBA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWb,EAASS,QACxCJ,EAAGS,KAAKd,EAASU,IACjBV,EAASe,OAAOL,EAAG,GAGvBN,EAAGU,KAAKd,EAAS,IACjBK,EAAGS,KAAKd,EAAS,IAEjBI,EAAGF,KAAI,SAAAC,GAAC,OAAIG,GAASH,EAAEN,YACvBQ,EAAGH,KAAI,SAAAC,GAAC,OAAII,GAASJ,EAAEN,Y,IAaRmB,E,4JAVX,WACI,OACI,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,CAASM,SAAUI,EAAIH,SAAWK,EAAQC,IAC1C,cAAC,EAAD,CAASP,SAAUK,EAAIJ,SAAWK,EAAQC,W,GALxCT,aGlBHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9d18bc1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Pokedex from './Pokedex'\nimport './App.css'\n\nlet pokemons = [\n    { id: 4, name: 'Charmander', type: 'fire', base_exp: 62 },\n    { id: 7, name: 'Squirtle', type: 'water', base_exp: 63 },\n    { id: 11, name: 'Metapod', type: 'bug', base_exp: 72 },\n    { id: 12, name: 'Butterfree', type: 'flying', base_exp: 178 },\n    { id: 25, name: 'Pikachu', type: 'electric', base_exp: 112 },\n    { id: 39, name: 'Jigglypuff', type: 'normal', base_exp: 95 },\n    { id: 94, name: 'Gengar', type: 'poison', base_exp: 225 },\n    { id: 133, name: 'Eevee', type: 'normal', base_exp: 65 }\n], p1 = [], p2 = [], pexp1 = 0, pexp2 = 0;\n\nfor (let i = 0; i < pokemons.length; i++) {\n    let x = Math.floor(Math.random() * pokemons.length);\n    p1.push(pokemons[x]);\n    pokemons.splice(x, 1);\n    x = Math.floor(Math.random() * pokemons.length);\n    p2.push(pokemons[x]);\n    pokemons.splice(x, 1);\n}\n\np1.push(pokemons[0]);\np2.push(pokemons[1]);\n\np1.map(p => pexp1 += p.base_exp);\np2.map(p => pexp2 += p.base_exp);\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Pokedex pokemons={p1} isWinner={(pexp1 > pexp2) ? true : false} />\n                <Pokedex pokemons={p2} isWinner={(pexp1 < pexp2) ? true : false} />\n            </div>\n        );\n    }\n};\n\nexport default App;","import React, { Component } from 'react';\nimport './Pokecard.css';\n\nclass Pokecard extends Component {\n    render() {\n        let info = this.props.info;\n        let src = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n        if (info.id < 10)\n            src += \"00\" + info.id;\n        else if (info.id >= 10 && info.id < 100)\n            src += \"0\" + info.id;\n        else\n            src += info.id;\n        src += \".png\";\n        return (\n            <div className=\"pokecard-container\">\n                <p>\n                    <h4 className=\"pokecard-title\">{info.name}</h4>\n                    <img src={src} className=\"pokecard-img\" />\n                    <p className=\"pokedex-info\"><pre>Type:  {info.type} <br />EXP:    {info.base_exp}</pre></p>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Pokecard;","import React, { Component } from 'react';\nimport Pokecard from './Pokecard'\nimport './Pokedex.css'\n\n\n\nclass Pokedex extends Component {\n    render() {\n        let pokemons = this.props.pokemons;\n        return (\n            <div className=\"pokedex-container \" className={(this.props.isWinner) ? \"Green\" : \"Red\"}>\n                <h1 className=\"pokedex-title\">{(this.props.isWinner) ? \"You Won\" : \"You Lost\"}</h1>\n                <p className=\"pokedex-content\">\n                    {pokemons.map(\n                        p => <Pokecard info={p} />\n                    )}\n                </p>\n            </div>\n        );\n    }\n};\n\nexport default Pokedex;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}